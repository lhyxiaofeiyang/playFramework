<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html id="top" xmlns="http://www.w3.org/1999/xhtml" xmlns:jspwiki="http://www.jspwiki.org"><head>
  <title>
    PlayFramework：产品化
  </title>
  











<link rel="stylesheet" media="screen, projection, print" type="text/css" href="%E4%BA%A7%E5%93%81%E5%8C%96_files/jspwiki.css">

<link rel="stylesheet" type="text/css" media="print" href="%E4%BA%A7%E5%93%81%E5%8C%96_files/jspwiki_print.css">
<!-- INCLUDERESOURCES (stylesheet) -->

<!-- INCLUDERESOURCES (inlinecss) -->



<noscript>
<style type="text/css">
#hiddenmorepopup { display:block; }
</style>
</noscript>


<script type="text/javascript" src="%E4%BA%A7%E5%93%81%E5%8C%96_files/mootools.js"></script>
<script type="text/javascript" src="%E4%BA%A7%E5%93%81%E5%8C%96_files/prettify.js"></script>
<script type="text/javascript" src="%E4%BA%A7%E5%93%81%E5%8C%96_files/jspwiki-common.js"></script>
<script type="text/javascript" src="%E4%BA%A7%E5%93%81%E5%8C%96_files/jspwiki-commonstyles.js"></script>
<!-- INCLUDERESOURCES (script) -->





<meta name="wikiContext" content="view">
<meta name="wikiBaseUrl" content="http://www.playframework.cn/">
<meta name="wikiPageUrl" content="/wiki/%23%24%25">
<meta name="wikiEditUrl" content="/Edit.jsp?page=%E4%BA%A7%E5%93%81%E5%8C%96">
<meta name="wikiJsonUrl" content="/JSON-RPC">
<meta name="wikiPageName" content="产品化">
<meta name="wikiUserName" content="119.137.62.59">
<meta name="wikiTemplateUrl" content="/templates/default/">
<meta name="wikiApplicationName" content="PlayFramework">

<script type="text/javascript">//<![CDATA[
/* Localized javascript strings: LocalizedStrings[] */
var LocalizedStrings = {
"javascript.edit.allsections":"（全部）",
"javascript.slimbox.error":"<h2>错误</h2> 您的请求有问题。<br />请重试",
"javascript.slimbox.remoteRequest":"远程请求 {0}（共 {1} 个）",
"javascript.slimbox.close":"关闭 &#215;",
"javascript.quick.edit":"[编辑]",
"javascript.sort.descending":"降序。单击反转排序顺序",
"javascript.expand":"单击扩展",
"javascript.group.validName":"请为新组指定有效的名称",
"javascript.slimbox.next":"下一个&raquo;",
"javascript.filter.all":"（全部）",
"javascript.edit.areyousure":"如果没有单击“保存”按钮所做的更改将丢失。是否要退出此页面？",
"javascript.quick.edit.title":"编辑段落 {0}...",
"javascript.slimbox.directLink":"到目标的直接链接",
"javascript.prefs.areyousure":"如果没有单击“保存用户首选项”按钮，前面所做的更改将丢失。是否要退出此页面？",
"javascript.sbox.clone.suffix":"-New",
"javascript.slimbox.info":"图像 {0}（共 {1} 个）",
"javascript.tip.default.title":"更多...",
"javascript.edit.resize":"拖动来调整文本区的大小",
"javascript.edit.findandreplace.nomatch":"未找到匹配项！",
"javascript.sort.ascending":"升序。单击反转排序顺序",
"javascript.slimbox.close.title":"关闭 [Esc]",
"javascript.edit.toolbar.makeSelection":"请先进行选择。",
"javascript.favs.hide":"单击隐藏收藏夹",
"javascript.sectionediting.label":"段落概览",
"javascript.slimbox.previous":"&laquo;上一个",
"javascript.favs.show":"单击显示收藏夹",
"javascript.collapse":"单击折叠",
"javascript.category.title":"单击显示类别 [{0}] ...",
"javascript.sort.click":"单击排序",
"javascript.edit.startOfPage":"（页面开始）"
};


/* INCLUDERESOURCES (jsfunction) */

//]]></script>

<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<link rel="search" href="http://www.playframework.cn/wiki/FindPage" title="Search PlayFramework">
<link rel="help" href="http://www.playframework.cn/wiki/TextFormattingRules" title="Help">

 <link rel="start" href="http://www.playframework.cn/wiki/PlayFramework%20Tutorial" title="Front page">
<link rel="alternate stylesheet" type="text/css" href="%E4%BA%A7%E5%93%81%E5%8C%96_files/jspwiki_print.css" title="Print friendly">
<link rel="alternate stylesheet" type="text/css" href="%E4%BA%A7%E5%93%81%E5%8C%96_files/jspwiki.css" title="Standard">
<link rel="shortcut icon" type="image/x-icon" href="http://www.playframework.cn/images/favicon.ico">

<link rel="icon" type="image/x-icon" href="http://www.playframework.cn/images/favicon.ico">



  










  
  
  
</head>

<body class="view">

<div id="wikibody" class="fav-left">
 
  






<div id="header">

  <div class="titlebox"></div>

  <div class="applicationlogo"> 
    <a href="http://www.playframework.cn/wiki/PlayFramework%20Tutorial" title="转到主页 PlayFramework Tutorial ">主页</a>
  </div>

  <div class="companylogo"></div>

  






<div class="userbox">

  
    <span class="username anonymous">
      您好（匿名访客）
    </span>
  
  
  

  
  
  
    
      <a href="http://www.playframework.cn/Login.jsp?redirect=%E4%BA%A7%E5%93%81%E5%8C%96" class="action login" title="登录或注册为新用户">登录</a>
    
  
  
  
  

  
  
    <a href="http://www.playframework.cn/UserPreferences.jsp?redirect=%E4%BA%A7%E5%93%81%E5%8C%96" class="action prefs" accesskey="p" title="管理首选项 [ p ]">我的首选项(<span class="accesskey">P</span>)
    </a>
  
  

  <div class="clearbox"></div>

</div>

  <div class="pagename">产品化</div>

  <div class="searchbox">






<form action="/Search.jsp" class="wikiform" id="searchForm" accept-charset="UTF-8">

  <div style="position:relative">
  <input onblur="if( this.value == '' ) { this.value = this.defaultValue }; return true; " onfocus="if( this.value == this.defaultValue ) { this.value = ''}; return true; " value="快速导航" name="query" id="query" size="20" accesskey="f" autocomplete="off" type="text">
  <button type="submit" name="searchSubmit" id="searchSubmit" value="转到！" title="转到！"></button>
  </div>
  <div id="searchboxMenu" style="visibility: hidden; opacity: 0;" visibility="visible">
    <div id="searchTools">
      <a href="#" id="quickView" class="action" onclick="SearchBox.navigate( '/wiki/__PAGEHERE__','查看选定页面' );" title="查看选定页面">查看</a>
      <a href="#" id="quickEdit" class="action" onclick="SearchBox.navigate( '/Edit.jsp?page=__PAGEHERE__','编辑选定页面' );" title="编辑选定页面">编辑</a>
      <a href="#" id="quickClone" class="action" onclick="return SearchBox.navigate( '/Edit.jsp?page=__PAGEHERE__', '复制选定页面', true );" title="复制选定页面">复制</a>
      <a href="#" id="advancedSearch" class="action" onclick="SearchBox.navigate( 'http://www.playframework.cn/Search.jsp?query=__PAGEHERE__','产品化' )" title="高级搜索 [ f ]">查找</a>
    </div>
    <div id="searchResult">
	  快速搜索
      <span id="searchTarget">（输入提示）</span>
      <span id="searchSpin" class="spin" style="position:absolute;display:none;"></span>
	  <div id="searchOutput"></div>
    </div>
    <div id="recentSearches" style="display:none;">
      最近的搜索
      <span><a href="#" id="recentClear">（清除）</a></span>
    </div>
  </div>

</form></div>

  <div class="breadcrumbs">浏览记录：&nbsp;<a class="wikipage" href="http://www.playframework.cn/wiki/Session%E5%92%8CFlash%E4%BD%9C%E7%94%A8%E5%9F%9F">Session和Flash作用域</a>, <a class="wikipage" href="http://www.playframework.cn/wiki/%E5%B1%9E%E6%80%A7%E6%A8%A1%E6%8B%9F">属性模拟</a>, <a class="wikipage" href="http://www.playframework.cn/wiki/%E6%95%B0%E6%8D%AE%E5%BA%93%E9%85%8D%E7%BD%AE">数据库配置</a>, <a class="wikipage" href="http://www.playframework.cn/wiki/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96">数据持久化</a>, <a class="wikipage" href="http://www.playframework.cn/wiki/%E6%97%A0%E7%8A%B6%E6%80%81%E6%A8%A1%E5%9E%8B">无状态模型</a>, <a class="wikipage" href="http://www.playframework.cn/wiki/Job%E7%9A%84%E7%9B%B4%E6%8E%A5%E8%B0%83%E7%94%A8">Job的直接调用</a>, <a class="wikipage" href="http://www.playframework.cn/wiki/%E6%9C%AC%E7%AB%A0%E5%B0%8F%E7%BB%937">本章小结7</a>, <a class="wikipage" href="http://www.playframework.cn/wiki/%E9%AA%8C%E8%AF%81%E7%A0%81">验证码</a>, <a class="wikipage" href="http://www.playframework.cn/wiki/%E5%9B%BD%E9%99%85%E5%8C%96">国际化</a>, <a class="wikipage" href="http://www.playframework.cn/wiki/%E7%BC%93%E5%AD%98">缓存</a></div>

</div>

  <div id="content">

    <div id="page">
      





<div id="actionsTop" class="pageactions"> 
  <ul>

    
    
    

    
    <li id="morebutton" href="#">
      <a href="http://www.playframework.cn/wiki/MoreMenu" class="action more">更多...</a>
    <ul id="morepopup" style="visibility: hidden; opacity: 0;">
     
       	
     
       
     
    
       
     
       <li>
       
       <a class="action rawpage wikipage" href="http://www.playframework.cn/wiki/%E4%BA%A7%E5%93%81%E5%8C%96?skin=raw" title="查看页面源代码">查看页面源代码
       </a>
       
       
       </li>
      
        
  
      
      
      

      
	  <li class="separator">
        <div id="moremenu"></div>
      </li>
  </ul></li>

  </ul>
</div>

      








<div class="tabmenu">

  

  

  
  
  
    
  
    
  



  <a class="activetab" id="menu-pagecontent" accesskey="v">查看</a>

  

  
  <a id="menu-attach" accesskey="a">附件</a>
  
    
  <a id="menu-info" href="http://www.playframework.cn/PageInfo.jsp?page=%E4%BA%A7%E5%93%81%E5%8C%96" accesskey="i">信息</a>
    
  

</div>
<div class="tabs">

  <div id="pagecontent">

    











<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;本节将介绍一些有效的方法，帮助读者优化应用程序，使Play项目可以更顺利地作为产品运行。
</p><p><br>
</p><h3 id="section-_E4_BA_A7_E5_93_81_E5_8C_96-10.9.1_E5_AE_9A_E4_B9_89_E6_A1_86_E6_9E_B6ID">10.9.1 定义框架 ID<a class="hashlink" href="#section-_E4_BA_A7_E5_93_81_E5_8C_96-10.9.1_E5_AE_9A_E4_B9_89_E6_A1_86_E6_9E_B6ID">#</a></h3>
<p></p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;首先需要给应用指定框架ID。例如，我们使用<b>play id</b>命令将框架ID设置为production，之后如果需要将Play框架设置为PROD模式只需在application.conf文件里进行如下配置：
</p>
<div class="prettify">
<pre class="prettyprint prettified"><span class="pun">%</span><span class="pln">production</span><span class="pun">.</span><span class="pln">application</span><span class="pun">.</span><span class="pln">mode</span><span class="pun">=</span><span class="pln">prod</span></pre>
</div>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在该模式下启动应用，Play会预编译所有的Java文件和模版文件。如果在这一步出现了错误，应用是不能被成功启动的，此时对源文件的修改也不再会被热编译与加载。
</p>
<p><br>
</p><h3 id="section-_E4_BA_A7_E5_93_81_E5_8C_96-10.9.2_E8_AE_BE_E7_BD_AE_E6_95_B0_E6_8D_AE_E5_BA_93">10.9.2 设置数据库<a class="hashlink" href="#section-_E4_BA_A7_E5_93_81_E5_8C_96-10.9.2_E8_AE_BE_E7_BD_AE_E6_95_B0_E6_8D_AE_E5_BA_93">#</a></h3>
<p></p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;如果应用还在使用开发数据库（例如内存数据库db=mem或者文件数据
库db=fs，），显然不能满足产品化的需求，我们必须在产品化的时候选择更加健壮的数据库引擎。下例给出通用的JDBC连接方式，并以Mysql为例：
</p>
<div class="prettify">
<pre class="prettyprint prettified"><span class="pun">%</span><span class="pln">production</span><span class="pun">.</span><span class="pln">db</span><span class="pun">.</span><span class="pln">url</span><span class="pun">=</span><span class="pln">jdbc</span><span class="pun">:</span><span class="pln">mysql</span><span class="pun">:</span><span class="com">//localhost/prod</span><span class="pln"><br></span><span class="pun">%</span><span class="pln">production</span><span class="pun">.</span><span class="pln">db</span><span class="pun">.</span><span class="pln">driver</span><span class="pun">=</span><span class="pln">com</span><span class="pun">.</span><span class="pln">mysql</span><span class="pun">.</span><span class="pln">jdbc</span><span class="pun">.</span><span class="typ">Driver</span><span class="pln"><br></span><span class="pun">%</span><span class="pln">production</span><span class="pun">.</span><span class="pln">db</span><span class="pun">.</span><span class="pln">user</span><span class="pun">=</span><span class="pln">root<br></span><span class="pun">%</span><span class="pln">production</span><span class="pun">.</span><span class="pln">db</span><span class="pun">.</span><span class="kwd">pass</span><span class="pun">=</span><span class="lit">1515312</span></pre>
</div>
<p><br>
</p><h3 id="section-_E4_BA_A7_E5_93_81_E5_8C_96-10.9.3_E7_A6_81_E7_94_A8JPASchema_E8_87_AA_E5_8A_A8_E6_9B_B4_E6_96_B0">10.9.3 禁用JPA Schema自动更新<a class="hashlink" href="#section-_E4_BA_A7_E5_93_81_E5_8C_96-10.9.3_E7_A6_81_E7_94_A8JPASchema_E8_87_AA_E5_8A_A8_E6_9B_B4_E6_96_B0">#</a></h3>
<p></p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;如果应用中使用了Hibernate提供的Schema自动更新特性，我们必须在产品化时将其关闭。在产品服务器中，使用Hibernate来自动更新数据库与数据并不是可行的方式，因为这可能会导致诸如数据覆盖、丢失或是没有足够权限操纵数据表等问题的出现。
</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;如果用户确保应用对产品环境的数据库有完整的操纵权限，并且只是初次部署(即只做数据初始化工作)，也是可以使用这个特性的。针对这种情况，需要在application.conf文件中进行如下配置：
</p>
<div class="prettify">
<pre class="prettyprint prettified"><span class="pun">%</span><span class="pln">production</span><span class="pun">.</span><span class="pln">jpa</span><span class="pun">.</span><span class="pln">ddl</span><span class="pun">=</span><span class="pln">create</span></pre>
</div>
<div class="quote">
注意：
<p>请确保只在初次发布时使用该方式，并在之后更新部署时关闭该配置，否则会造成数据覆盖、丢失等错误发生。如果没有特殊的需求，笔者和Play作者都建议在产品化时将该配置取消。
</p></div>

<p><br>
</p><h3 id="section-_E4_BA_A7_E5_93_81_E5_8C_96-10.9.4_E9_85_8D_E7_BD_AE_E5_AF_86_E9_92_A5">10.9.4 配置密钥<a class="hashlink" href="#section-_E4_BA_A7_E5_93_81_E5_8C_96-10.9.4_E9_85_8D_E7_BD_AE_E5_AF_86_E9_92_A5">#</a></h3>
<p></p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Play的密钥具有安全特性，比如在Session签名中就会使用到，因此在Play应用中请务必保证该密钥的私有性。我们可以在application.conf配置文件中通过如下配置设定密钥：
</p>
<div class="prettify">
<pre class="prettyprint prettified"><span class="pun">%</span><span class="pln">production</span><span class="pun">.</span><span class="pln">application</span><span class="pun">.</span><span class="pln">secret</span><span class="pun">=</span><span class="pln">c12d1c59af499d20f4955d07255ed8ea333</span></pre>
</div>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在Play中可以通过<b>play secret</b>命令生成随机密钥。读者在使用密钥时需要注意，如果应用需要被部署到分布式的环境，我们必须要确保所有的应用实例都具有相同的密钥。
</p>
<p><br>
</p><h3 id="section-_E4_BA_A7_E5_93_81_E5_8C_96-10.9.5_E9_85_8D_E7_BD_AE_E5_89_8D_E7_AB_AFHTTP_E6_9C_8D_E5_8A_A1_E5_99_A8">10.9.5 配置前端HTTP服务器<a class="hashlink" href="#section-_E4_BA_A7_E5_93_81_E5_8C_96-10.9.5_E9_85_8D_E7_BD_AE_E5_89_8D_E7_AB_AFHTTP_E6_9C_8D_E5_8A_A1_E5_99_A8">#</a></h3>
<p></p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;如果我们需要将应用部署在Play自带的服务器，只需在application.conf文件中配置如下信息即可：
</p>
<div class="prettify">
<pre class="prettyprint prettified"><span class="pun">%</span><span class="pln">production</span><span class="pun">.</span><span class="pln">http</span><span class="pun">.</span><span class="pln">port</span><span class="pun">=</span><span class="lit">80</span></pre>
</div>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;但是有时候我们需要将多个应用部署在同个服务器上，或是需要为多个应用实例提供负载均衡来提高伸缩性和容错性，这时我们可以使用第三方的HTTP服务器。
<p><br>
</p>
<div class="quote">
注意：
<p>直接使用Play内置的服务器将会比使用其他HTTP服务器具有更好的性能。
</p></div>

<p><br>
<b>配置lighttpd</b>
</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;以下这个例子将会展示如何配置lighttpd作为HTTP服务器。尽管Apache也可以做到这些，但是如果读者只需要其中的虚拟主机或负载均衡功能，lighttpd会是更轻便、更易于配置的选择。/etc/lighttpd/lighttpd.conf文件的具体配置如下：
</p>
<div class="prettify">
<pre class="prettyprint prettified"><span class="pln">server</span><span class="pun">.</span><span class="pln">modules </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"mod_access"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"mod_proxy"</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; </span><span class="str">"mod_accesslog"</span><span class="pln"> <br></span><span class="pun">)</span><span class="pln"><br></span><span class="pun">…</span><span class="pln"><br>$HTTP</span><span class="pun">[</span><span class="str">"host"</span><span class="pun">]</span><span class="pln"> </span><span class="pun">=~</span><span class="pln"> </span><span class="str">"www.myapp.com"</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; proxy</span><span class="pun">.</span><span class="pln">balance </span><span class="pun">=</span><span class="pln"> </span><span class="str">"round-robin"</span><span class="pln"> proxy</span><span class="pun">.</span><span class="pln">server </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="pln"> </span><span class="str">"/"</span><span class="pln"> </span><span class="pun">=&gt;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="pun">(</span><span class="pln"> </span><span class="pun">(</span><span class="pln"> </span><span class="str">"host"</span><span class="pln"> </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="str">"127.0.0.1"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"port"</span><span class="pln"> </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="lit">9000</span><span class="pln"> </span><span class="pun">)</span><span class="pln"> </span><span class="pun">)</span><span class="pln"> </span><span class="pun">)</span><span class="pln"><br></span><span class="pun">}</span><span class="pln"><br>&nbsp;<br>$HTTP</span><span class="pun">[</span><span class="str">"host"</span><span class="pun">]</span><span class="pln"> </span><span class="pun">=~</span><span class="pln"> </span><span class="str">"www.loadbalancedapp.com"</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; proxy</span><span class="pun">.</span><span class="pln">balance </span><span class="pun">=</span><span class="pln"> </span><span class="str">"round-robin"</span><span class="pln"> proxy</span><span class="pun">.</span><span class="pln">server </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="pln"> </span><span class="str">"/"</span><span class="pln"> </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="pun">(</span><span class="pln"> <br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="pun">(</span><span class="pln"> </span><span class="str">"host"</span><span class="pln"> </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="str">"127.0.0.1"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"port"</span><span class="pln"> </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="lit">9000</span><span class="pln"> </span><span class="pun">),</span><span class="pln"> <br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="pun">(</span><span class="pln"> </span><span class="str">"host"</span><span class="pln"> </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="str">"127.0.0.1"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"port"</span><span class="pln"> </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="lit">9001</span><span class="pln"> </span><span class="pun">)</span><span class="pln"> </span><span class="pun">)</span><span class="pln"> <br>&nbsp; &nbsp; </span><span class="pun">)</span><span class="pln"><br></span><span class="pun">}</span></pre>
</div>
<p><br>
<b>配置Apache</b>
</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;以下这个例子将展示如何配置Apache httpd server作为Play应用的HTTP服务器。
</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Apache服务器的配置文件路径为\conf\httpd.conf。Apache配置文件中使用#进行注释，取消以下这条配置信息前的#注释（如果存在）。
</p>
<div class="prettify">
<pre class="prettyprint prettified"><span class="typ">LoadModule</span><span class="pln"> proxy_module modules</span><span class="pun">/</span><span class="pln">mod_proxy</span><span class="pun">.</span><span class="pln">so</span></pre>
</div>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;然后在文件末尾添加如下信息：
<div class="prettify">
<pre class="prettyprint prettified"><span class="tag">&lt;VirtualHost </span><span class="atn">*:80</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; ProxyPreserveHost On<br>&nbsp; ServerName www.loadbalancedapp.com<br>&nbsp; ProxyPass / http://127.0.0.1:9000/<br>&nbsp; ProxyPassReverse / http://127.0.0.1:9000/<br></span><span class="tag">&lt;/VirtualHost&gt;</span></pre>
</div>
<p><br>
<b>利用Apache服务器全透明部署应用</b>
</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;如果需要更新Web应用，我们通常会关闭服务器，更新应用，最后重新启动服务器。但是这个期间造成的中断服务显然是对用户很不友好的表现。理想的情况是更新Web应用而不中断原有服务，即透明化部署应用的过程。实现该功能的原理是运行同个Play应用的两个实例，并利用HTTP服务器负载均衡。当其中某个应用实例无法提供服务时，HTTP服务器会将所有的请求切换至仍然能提供服务的另一个实例。
</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;下面将演示如何做到这一点。为了方便演示，我们会启动同个Play应用两次，只是将其中的一个端口设置为9999，另一个端口设置为9998。
</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在实际中，应用很有可能处于两个不同的服务器。复制一份相同的Play应用并编辑application.conf文件，改变其中的端口配置。然后使用<b>play start</b>命令分别运行这两个Web应用：
</p>
<div class="prettify">
<pre class="prettyprint prettified"><span class="pln">play start mysuperwebapp</span></pre>
</div>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;接着配置Apache的负载均衡器：
</p>
<div class="prettify">
<pre class="prettyprint prettified"><span class="tag">&lt;VirtualHost </span><span class="atn">mysuperwebapp.com:80</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; ServerName mysuperwebapp.com<br>&nbsp; </span><span class="tag">&lt;Location </span><span class="atn">/balancer-manager</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; SetHandler balancer-manager<br>&nbsp; &nbsp; Order Deny,Allow<br>&nbsp; &nbsp; Deny from all<br>&nbsp; &nbsp; Allow from .mysuperwebapp.com<br>&nbsp; </span><span class="tag">&lt;/Location&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;Proxy </span><span class="atn">balancer://mycluster</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; BalancerMember http://localhost:9999<br>&nbsp; &nbsp; BalancerMember http://localhost:9998 status=+H<br>&nbsp; </span><span class="tag">&lt;/Proxy&gt;</span><span class="pln"><br>&nbsp; </span><span class="tag">&lt;Proxy </span><span class="atn">*</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; Order Allow,Deny<br>&nbsp; &nbsp; Allow From All<br>&nbsp; </span><span class="tag">&lt;/Proxy&gt;</span><span class="pln"><br>&nbsp; ProxyPreserveHost On<br>&nbsp; ProxyPass /balancer-manager !<br>&nbsp; ProxyPass / balancer://mycluster/<br>&nbsp; ProxyPassReverse / http://localhost:9999/<br>&nbsp; ProxyPassReverse / http://localhost:9998/<br></span><span class="tag">&lt;/VirtualHost&gt;</span></pre>
</div>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在该配置中需要注意的地方是balancer://mycluster，其声明了一个负载均衡器。跟在第二个Play应用后的参数+H表明第二个Play应用处于待用状态，不过这并不影响其参与负载均衡。其他的配置细节已超出本书的范围，不再赘述。当我们需要更新应用时，首先停止第一个应用的服务：
</p>
<div class="prettify">
<pre class="prettyprint prettified"><span class="pln">play stop mysuperwebapp1</span></pre>
</div>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;负载均衡器会将所有的请求转向到mysuperwebapp2。这时便可以对应用mysuperwebapp1进行更新，当我们更新完成之后再次启动mysuperwebapp1：
</p>
<div class="prettify">
<pre class="prettyprint prettified"><span class="pln">play start mysuperwebapp1</span></pre>
</div>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;此时我们又可以安全地更新mysuperwebapp2了（停止—更新—启动）。
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Apache也提供了简单的方式来监视集群的状态，即在浏览器中转向/balancer-manager来监视当前集群。因为Play是完全无状态的，所以我们无需管理两个集群Session共享的问题。事实上，我们也可以同时运行两个以上的Play应用集群。
</p>
<p><br>
</p><h3 id="section-_E4_BA_A7_E5_93_81_E5_8C_96-10.9.6_E9_AB_98_E7_BA_A7_E4_BB_A3_E7_90_86_E8_AE_BE_E7_BD_AE">10.9.6 高级代理设置<a class="hashlink" href="#section-_E4_BA_A7_E5_93_81_E5_8C_96-10.9.6_E9_AB_98_E7_BA_A7_E4_BB_A3_E7_90_86_E8_AE_BE_E7_BD_AE">#</a></h3>
<p></p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当Play应用与HTTP服务器运行在不同的机器上时，请求地址会被视为是来自HTTP服务器的地址。在默认情况下，当Play应用和服务器代理运行在同一台物理服务器上时，Play应用会将请求地址视为来自127.0.0.1。
</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;代理服务器可以添加特殊的请求头来告诉被代理的Web应用当前这个请求是来自哪里的。大多数Web服务器都会添加X-Forwarded-For来完成这样的事情，其值通常是运行着Web应用的原始主机IP。如果我们在XForwardedSupport中打开转发支持，Play会将request.remoteAddress修改为运行Play的物理服务器IP而不是默认的代理服务器IP，不过为了使它正常工作我们还必须为其列出所有的代理服务器。
</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;主机的请求头仍是不透明的，我们还需要对服务器进行一些配置。以Apache 2.x为例子，只需要在配置文件中添加如下信息：
</p>
<div class="prettify">
<pre class="prettyprint prettified"><span class="typ">ProxyPreserveHost</span><span class="pln"> on</span></pre>
</div>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;请求头就会是原始主机产生的请求头了。通过以上这些配置，应用程序可以以更直接的方式在网上发布。
<p><br>
</p><h3 id="section-_E4_BA_A7_E5_93_81_E5_8C_96-10.9.7_E9_85_8D_E7_BD_AEHTTPS">10.9.7 配置HTTPS<a class="hashlink" href="#section-_E4_BA_A7_E5_93_81_E5_8C_96-10.9.7_E9_85_8D_E7_BD_AEHTTPS">#</a></h3>
<p></p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Play内置的服务器支持HTTPS协议，在产品化时同样也适用。内置服务器同时提供了对于证书的管理，包含了对原生的Java keyStore支持，以及对简单的证书和密钥文件支持。我们可以通过在application.conf配置文件中配置https.port来为Play应用打开HTTPS连接器，然后将证书放在conf目录下：
</p>
<div class="prettify">
<pre class="prettyprint prettified"><span class="pln">http</span><span class="pun">.</span><span class="pln">port</span><span class="pun">=</span><span class="lit">9000</span><span class="pln"><br>https</span><span class="pun">.</span><span class="pln">port</span><span class="pun">=</span><span class="lit">9443</span></pre>
</div>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Play支持了X509证书和keystore证书，其中X509证书必须按照如下方式命名：host.cert为证书，host.key为密钥。如果读者使用的是keystore证书，则默认的命名为certificate.jks。
</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;使用X509证书的配置实例如下：
</p>
<div class="prettify">
<pre class="prettyprint prettified"><span class="com"># X509 certificates</span><span class="pln"><br>certificate</span><span class="pun">.</span><span class="pln">key</span><span class="pun">.</span><span class="pln">file</span><span class="pun">=</span><span class="pln">conf</span><span class="pun">/</span><span class="pln">host</span><span class="pun">.</span><span class="pln">key<br>certificate</span><span class="pun">.</span><span class="pln">file</span><span class="pun">=</span><span class="pln">conf</span><span class="pun">/</span><span class="pln">host</span><span class="pun">.</span><span class="pln">cert<br></span><span class="com"># 如果密钥文件是用密码保护</span><span class="pln"><br>certificate</span><span class="pun">.</span><span class="pln">password</span><span class="pun">=</span><span class="pln">secret<br>trustmanager</span><span class="pun">.</span><span class="pln">algorithm</span><span class="pun">=</span><span class="pln">JKS</span></pre>
</div>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;使用keystore证书的配置实例如下：
</p>
<div class="prettify">
<pre class="prettyprint prettified"><span class="pln">keystore</span><span class="pun">.</span><span class="pln">algorithm</span><span class="pun">=</span><span class="pln">JKS<br>keystore</span><span class="pun">.</span><span class="pln">password</span><span class="pun">=</span><span class="pln">secret<br>keystore</span><span class="pun">.</span><span class="pln">file</span><span class="pun">=</span><span class="pln">conf</span><span class="pun">/</span><span class="pln">certificate</span><span class="pun">.</span><span class="pln">jks</span></pre>
</div>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;以上例子均采用了默认值。我们还可以通过<b>openssl</b>命令生成自签名的证书。
</p>
<div class="prettify">
<pre class="prettyprint prettified"><span class="pln">openssl genrsa </span><span class="lit">1024</span><span class="pln"> </span><span class="pun">&gt;</span><span class="pln"> host</span><span class="pun">.</span><span class="pln">key<br>openssl req </span><span class="pun">-</span><span class="kwd">new</span><span class="pln"> </span><span class="pun">-</span><span class="pln">x509 </span><span class="pun">-</span><span class="pln">nodes </span><span class="pun">-</span><span class="pln">sha1 </span><span class="pun">-</span><span class="pln">days </span><span class="lit">365</span><span class="pln"> </span><span class="pun">-</span><span class="pln">key host</span><span class="pun">.</span><span class="pln">key </span><span class="pun">&gt;</span><span class="pln"> host</span><span class="pun">.</span><span class="pln">cert</span></pre>
</div>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;对于使用keystore的用户，可以在application.conf文件中直接配置，生成自签名证书。配置信息如下：
</p>
<div class="prettify">
<pre class="prettyprint prettified"><span class="com"># Keystore </span><span class="pln"><br>ssl</span><span class="pun">.</span><span class="typ">KeyManagerFactory</span><span class="pun">.</span><span class="pln">algorithm</span><span class="pun">=</span><span class="typ">SunX509</span><span class="pln"><br>trustmanager</span><span class="pun">.</span><span class="pln">algorithm</span><span class="pun">=</span><span class="pln">JKS<br>keystore</span><span class="pun">.</span><span class="pln">password</span><span class="pun">=</span><span class="pln">secret<br>keystore</span><span class="pun">.</span><span class="pln">file</span><span class="pun">=</span><span class="pln">certificate</span><span class="pun">.</span><span class="pln">jks</span></pre>
</div>
<p>
</p><p><br>
</p><h3 id="section-_E4_BA_A7_E5_93_81_E5_8C_96-10.9.8_E9_9D_9EPython_E7_8E_AF_E5_A2_83_E4_B8_8B_E7_9A_84_E9_83_A8_E7_BD_B2">10.9.8 非Python环境下的部署<a class="hashlink" href="#section-_E4_BA_A7_E5_93_81_E5_8C_96-10.9.8_E9_9D_9EPython_E7_8E_AF_E5_A2_83_E4_B8_8B_E7_9A_84_E9_83_A8_E7_BD_B2">#</a></h3>
<p></p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Python在大多数Unix系的系统中都被默认安装了。虽然Play在Windows版本中也包含了嵌入式的Python，但也不排除有无法支持Python运行环境的服务器的存在。针对这个问题，Play附带了ant配置文件build.xml，提供有限功能的部署方式。
</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在应用根目录，使用<b>ant start</b>命令运行服务器：
</p>
<div class="prettify">
<pre class="prettyprint prettified"><span class="pln">ant start </span><span class="pun">-</span><span class="typ">Dplay</span><span class="pun">.</span><span class="pln">path</span><span class="pun">=/</span><span class="pln">path</span><span class="pun">/</span><span class="pln">to</span><span class="pun">/</span><span class="pln">playdirectory</span></pre>
</div>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;如果需要停止服务器，则可以使用<b>ant stop</b>命令：
</p>
<div class="prettify">
<pre class="prettyprint prettified"><span class="pln">ant stop </span><span class="pun">-</span><span class="typ">Dplay</span><span class="pun">.</span><span class="pln">path</span><span class="pun">=/</span><span class="pln">path</span><span class="pun">/</span><span class="pln">to</span><span class="pun">/</span><span class="pln">playdirectory</span></pre>
</div>
<div class="quote">
警告：
<p>当我们使用Play命令时，输出会被重定向到System.out。但是使用ant时，标准输出是无法访问的。所以使用这种方式部署时，我们必须为其提供Log4j配置文件。
</p></div>

<p><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;我们也可以在环境变量中指定Play框架的路径，或者将路径直接写入应用的build.xml配置文件里。
</p>
<p>






        
  </p></div>


  

  
  <div id="attach" class="hidetab">

    










<div id="addattachment">
<h3>添加新附件</h3>


<div class="formhelp">只有授权的用户才能上传新附件。</div>

</div>



  </div>

  
    
  <div id="info" class="hidetab">

  </div>

    
  

<div style="clear:both;"></div>
</div>

      







<div id="actionsBottom" class="pageactions"> 
    

    <a href="#top" class="action quick2top" title="转到顶部">«</a>

    
       该页面（修订版 23）最后由 丁海亮 在 <a href="http://www.playframework.cn/Diff.jsp?page=%E4%BA%A7%E5%93%81%E5%8C%96&amp;r1=23&amp;r2=22">25-Aug-2013 08:56</a> 修改。
    

    

   

  

   
</div>

    </div>

    






<div id="favorites">

  






<div class="userbox">

  
    <span class="username anonymous">
      您好（匿名访客）
    </span>
  
  
  

  
  
  
    
      <a href="http://www.playframework.cn/Login.jsp?redirect=%E4%BA%A7%E5%93%81%E5%8C%96" class="action login" title="登录或注册为新用户">登录</a>
    
  
  
  
  

  
  
    <a href="http://www.playframework.cn/UserPreferences.jsp?redirect=%E4%BA%A7%E5%93%81%E5%8C%96" class="action prefs" accesskey="p" title="管理首选项 [ p ]">我的首选项(<span class="accesskey">P</span>)
    </a>
  
  

  <div class="clearbox"></div>

</div>
  
  <div id="hiddenmorepopup">
  
  </div>
  
  

  

  

  
  <div class="leftmenu">
    <hr>
<p><b>Play!China Wiki</b>
</p>
<p>
</p><ul><li><a class="wikipage" href="http://www.playframework.cn/wiki/PlayFramework%20Tutorial">书籍撰写</a>
</li></ul><ul><li><a class="wikipage" href="http://www.playframework.cn/wiki/PlayChina%20Team">团队首页</a>
</li></ul><ul><li><a class="wikipage" href="http://www.playframework.cn/wiki/%E5%9B%BE%E7%89%87%E8%B5%84%E6%BA%90">图片资源</a>
</li></ul><ul><li><a class="wikipage" href="http://www.playframework.cn/wiki/%E7%A4%BE%E5%8C%BA%E7%8E%B0%E7%8A%B6">社区现状</a>
</li></ul><ul><li><a class="wikipage" href="http://www.playframework.cn/wiki/%E5%8F%91%E5%B1%95%E8%BD%A8%E8%BF%B9">发展轨迹</a>
</li></ul><ul><li><a class="wikipage" href="http://www.playframework.cn/wiki/%E8%81%94%E7%B3%BB%E6%88%91%E4%BB%AC">联系我们</a>
</li></ul>
    
  </div>
  
  <div class="leftmenufooter">
    <hr>
<p><b>Official Platform</b>
</p>
<ul><li><a class="external" href="http://www.oopsplay.org/">官方门户</a><img class="outlink" src="%E4%BA%A7%E5%93%81%E5%8C%96_files/out.png" alt="">
</li></ul><p>
</p><ul><li><a class="external" href="mailto:dhl@playframework.cn">团队邮箱</a><img class="outlink" src="%E4%BA%A7%E5%93%81%E5%8C%96_files/out.png" alt="">
</li></ul><p>
</p><hr>
<b>Cooperative Site</b>
<p><br>
</p><table class="imageplugin" border="0">
<tbody><tr><td><img src="%E4%BA%A7%E5%93%81%E5%8C%96_files/oschina_logo.png"></td></tr>
</tbody></table>

<table class="imageplugin" border="0">
<tbody><tr><td><img src="%E4%BA%A7%E5%93%81%E5%8C%96_files/logo.gif" width="165" height="75"></td></tr>
</tbody></table>

<table class="imageplugin" border="0">
<tbody><tr><td><img src="%E4%BA%A7%E5%93%81%E5%8C%96_files/1.jpg" width="165" height="165"></td></tr>
</tbody></table>

<p></p>
<p>
    
  </p></div>

  

  
  <!-- 
  <div class="wikiversion">JSPWiki v2.8.4
  --> 
 <span class="rssfeed">
    
  </span>
  </div>  
  <div style="display:none">
    <script type="text/javascript">var cnzz_protocol = (("https:" == document.location.protocol) ? " https://" : " http://");document.write(unescape("%3Cspan id='cnzz_stat_icon_1252938720'%3E%3C/span%3E%3Cscript src='" + cnzz_protocol + "s19.cnzz.com/stat.php%3Fid%3D1252938720' type='text/javascript'%3E%3C/script%3E"));</script><span id="cnzz_stat_icon_1252938720"><a href="http://www.cnzz.com/stat/website.php?web_id=1252938720" target="_blank" title="站长统计">站长统计</a></span><script src="%E4%BA%A7%E5%93%81%E5%8C%96_files/stat.php" type="text/javascript"></script><script src="%E4%BA%A7%E5%93%81%E5%8C%96_files/core.php" charset="utf-8" type="text/javascript"></script>
  </div>
</div>


	<div class="clearbox"></div>
  </div>

  





 
<div id="footer">

  <div class="applicationlogo"> 
    <a href="http://www.playframework.cn/wiki/PlayFramework%20Tutorial" title="转到主页 PlayFramework Tutorial ">主页</a>
  </div>

  <div class="companylogo"></div>

  <div class="copyright"></div>

  <div class="wikiversion">
    JSPWiki v2.8.4
  </div>

  <div class="rssfeed">
    
  </div>

</div>






</body></html>